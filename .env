# docker config
DOCKER_CLIENT_TIMEOUT=320
COMPOSE_HTTP_TIMEOUT=320
COMPOSE_PROJECT_NAME=po_off
COMPOSE_PATH_SEPARATOR=;
COMPOSE_FILE=docker-compose.yml;docker/dev.yml;docker/run.yml
COMPOSE_PROFILES=off

# when we don't need the dependencies
COMPOSE_FILE_BUILD=docker-compose.yml;docker/dev.yml

# exposition of product opener, leave blank to expose on all ports
# ends with ":"
PRODUCT_OPENER_EXPOSE=127.0.0.1:
# same but for all admin tools
ADMIN_EXPOSE=127.0.0.1:
# version for backend and frontend images
TAG=latest
# setting to align host user to internal user
# USER_UID=1000
# USER_GID=1000

# static lang dependent files for the website
# we have a minimal set of files in server repo, in prod we use main repo
WEB_RESOURCES_PATH=./web-default

# env vars
PRODUCERS_PLATFORM=0
PRODUCT_OPENER_DOMAIN=openfoodfacts.localhost
PRODUCT_OPENER_PORT=80
PRODUCT_OPENER_FLAVOR=openfoodfacts
PRODUCT_OPENER_FLAVOR_SHORT=off

# do you want extended dev packages ?
# (removed on standard builds to speed installation up and gain in stability)
# CPANMOPTS=--with-develop  --with-feature=off_server_dev_tools

# if 1 we log emails instead of sending them
# useful in dev mode
OFF_LOG_EMAILS=1

POSTGRES_USER=productopener
POSTGRES_PASSWORD=productopener
MINION_MODE=dev
MINION_QUEUE=openfoodfacts.localhost
MONGODB_HOST=mongodb
MONGODB_CACHE_SIZE=8 # GB
MONGO_INITDB_ROOT_USERNAME=root
MONGO_INITDB_ROOT_PASSWORD=test
ROBOTOFF_URL=http://robotoff.openfoodfacts.localhost:5500 # connect to Robotoff running in separate docker-compose deployment
FOLKSONOMY_URL=http://api.folksonomy.openfoodfacts.localhost
# connect to openfoodfacts-query running in separate docker-compose deployment.
# To test locally change to http://host.docker.internal:5510
# Note you will need to add basic auth to this if you want to upload scans, e.g. http://USER:PASSWORD@query:5510
QUERY_URL=http://query:5510
EVENTS_URL=
FACETS_KP_URL = https://facets-kp.openfoodfacts.org/render-to-html
# we push updated products to Redis stream so that every service is notified
# when a product is updated/deleted/created
# use `redis:6379` locally if you want to enable Redis
REDIS_URL=
GOOGLE_CLOUD_VISION_API_KEY=
CROWDIN_PROJECT_IDENTIFIER=
CROWDIN_PROJECT_KEY=
GEOLITE2_PATH=
GEOLITE2_LICENSE_KEY=
GEOLITE2_ACCOUNT_ID=
ELASTICSEARCH_HOSTS=
LOG_LEVEL_ROOT=TRACE
LOG_LEVEL_MONGODB=TRACE
LOG_LEVEL_RATE_LIMITER=TRACE
ODOO_CRM_URL=
ODOO_CRM_DB=
ODOO_CRM_USER=
ODOO_CRM_PASSWORD=

# No need to have it running, it's just to compose a URL
# you might also use the .net service
NUTRIPATROL_URL=http://nutripatrol.localhost

# Keycloak configuration
# See Auth.pm for definition of levels
OIDC_IMPLEMENTATION_LEVEL=1
OIDC_DISCOVERY_URL=http://keycloak:8080/realms/openfoodfacts/.well-known/openid-configuration
# IMPORTANT: change these on public deployments. Make sure any new flavors are added to docker-compose and modperl.conf
OFF_CLIENT_SECRET=Cf4NdSAjZsNO9HLcuXeuvukzFu00roQa
OFF_PRO_CLIENT_SECRET=1ILwRhBtNJJDQrHp8lR7yrP9S0N2W7al


# If this is truthy then this instance will process the global user-registered events. Only one instance should do this.
PROCESS_GLOBAL_REDIS_EVENTS=1

BUILD_CACHE_REPO=openfoodfacts/openfoodfacts-build-cache

# If you want the rate limiter to block requests (return 429) instead of doing nothing,
# set this to 1. Any other value will disable the blocking.
RATE_LIMITER_BLOCKING_ENABLED=1

COMMON_NET_NAME=off_shared_network

#11901: Remove once production is migrated. Values are:
# 0-Keep existing behaviour, 1-write to JSON and STO (STO is still source of truth), 2-Write to JSON and delete STO
# If the product JSON files need to be removed after reverting back to level 0 then can be deleted with
# find /mnt/podata/products -name "*.json" ! -name "*scans.json" -delete
SERIALIZE_TO_JSON=2

# recipe-estimator product service
# To test a locally running recipe-estimator with product opener in a docker dev environment:
# - run recipe-estimator with `uvicorn recipe_estimator.main:app --reload --host 0.0.0.0`
# - set environment variable to http://host.docker.internal:8000/api/v3/estimate_recipe
RECIPE_ESTIMATOR_URL=https://recipe-estimator.openfoodfacts.org/api/v3/estimate_recipe
RECIPE_ESTIMATOR_SCIPY_URL=https://recipe-estimator.openfoodfacts.org/api/v3/estimate_recipe_scipy