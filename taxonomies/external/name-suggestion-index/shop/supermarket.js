// A nodejs script to parse NameSuggestionIndex formatted JSON data and attempt to output valid taxinomy data.
// Do not use results without careful review
const data = require('./supermarket.json');

// A quick ISO 3601 to human labels (english) mapping.
// TODO: Ensure this matches exactly with countries.txt
// TODO: Replace with a better lookup
var iso3601 = {
  "ad": "Andorra",
  "ae": "United Arab Emirates",
  "af": "Afghanistan",
  "ag": "Antigua & Barbuda",
  "ai": "Anguilla",
  "al": "Albania",
  "am": "Armenia",
  "an": "Netherlands Antilles",
  "ao": "Angola",
  "aq": "Antarctica",
  "ar": "Argentina",
  "as": "American Samoa",
  "at": "Austria",
  "au": "Australia",
  "aw": "Aruba",
  "az": "Azerbaijan",
  "ba": "Bosnia & Herzegovina",
  "bb": "Barbados",
  "bd": "Bangladesh",
  "be": "Belgium",
  "bf": "Burkina Faso",
  "bg": "Bulgaria",
  "bh": "Bahrain",
  "bi": "Burundi",
  "bj": "Benin",
  "bm": "Bermuda",
  "bn": "Brunei Darussalam",
  "bo": "Bolivia",
  "br": "Brazil",
  "bs": "Bahamas",
  "bt": "Bhutan",
  "bv": "Bouvet Island",
  "bw": "Botswana",
  "by": "Belarus",
  "bz": "Belize",
  "ca": "Canada",
  "cc": "Cocos (Keeling) Islands",
  "cd": "Zaire",
  "cf": "Central African Republic",
  "cg": "Congo",
  "ch": "Switzerland",
  "ci": "Cote D'ivoire (Ivory Coast)",
  "ck": "Cook Islands",
  "cl": "Chile",
  "cm": "Cameroon",
  "cn": "China",
  "co": "Colombia",
  "cr": "Costa Rica",
  "cu": "Cuba",
  "cv": "Cape Verde",
  "cx": "Christmas Island",
  "cy": "Cyprus",
  "cz": "Czech Republic",
  "de": "Germany",
  "dj": "Djibouti",
  "dk": "Denmark",
  "dm": "Dominica",
  "do": "Dominican Republic",
  "dz": "Algeria",
  "ec": "Ecuador",
  "ee": "Estonia",
  "eg": "Egypt",
  "eh": "Western Sahara",
  "er": "Eritrea",
  "es": "Spain",
  "et": "Ethiopia",
  "fi": "Finland",
  "fj": "Fiji",
  "fk": "Falkland Islands (Malvinas)",
  "fm": "Micronesia",
  "fo": "Faroe Islands",
  "fr": "France",
  "ga": "Gabon",
  "gb": "United Kingdom",
  "gd": "Grenada",
  "ge": "Georgia",
  "gf": "French Guiana",
  "gh": "Ghana",
  "gi": "Gibraltar",
  "gl": "Greenland",
  "gm": "Gambia",
  "gn": "Guinea",
  "gp": "Guadeloupe",
  "gq": "Equatorial Guinea",
  "gr": "Greece",
  "gs": "S.Georgia & S.Sandwich Islands",
  "gt": "Guatemala",
  "gu": "Guam",
  "gw": "Guinea-Bissau",
  "gy": "Guyana",
  "hk": "Hong Kong",
  "hm": "Heard & McDonald Islands",
  "hn": "Honduras",
  "hr": "Croatia (Hrvatska)",
  "ht": "Haiti",
  "hu": "Hungary",
  "id": "Indonesia",
  "ie": "Ireland",
  "il": "Israel",
  "in": "India",
  "io": "British Indian Ocean Territory",
  "iq": "Iraq",
  "ir": "Iran",
  "is": "Iceland",
  "it": "Italy",
  "jm": "Jamaica",
  "jo": "Jordan",
  "jp": "Japan",
  "ke": "Kenya",
  "kg": "Kyrgyzstan",
  "kh": "Cambodia",
  "ki": "Kiribati",
  "km": "Comoros",
  "kn": "Saint Kitts & Nevis",
  "kp": "Korea (North)",
  "kr": "Korea (South)",
  "kw": "Kuwait",
  "ky": "Cayman Islands",
  "kz": "Kazakhstan",
  "la": "Laos",
  "lb": "Lebanon",
  "lc": "Saint Lucia",
  "li": "Liechtenstein",
  "lk": "Sri Lanka",
  "lr": "Liberia",
  "ls": "Lesotho",
  "lt": "Lithuania",
  "lu": "Luxembourg",
  "lv": "Latvia",
  "ly": "Libya",
  "ma": "Morocco",
  "mc": "Monaco",
  "md": "Moldova",
  "mg": "Madagascar",
  "mh": "Marshall Islands",
  "mk": "Macedonia",
  "ml": "Mali",
  "mm": "Myanmar",
  "mn": "Mongolia",
  "mo": "Macau",
  "mp": "Northern Mariana Islands",
  "mq": "Martinique",
  "mr": "Mauritania",
  "ms": "Montserrat",
  "mt": "Malta",
  "mu": "Mauritius",
  "mv": "Maldives",
  "mw": "Malawi",
  "mx": "Mexico",
  "my": "Malaysia",
  "mz": "Mozambique",
  "na": "Namibia",
  "nc": "New Caledonia",
  "ne": "Niger",
  "nf": "Norfolk Island",
  "ng": "Nigeria",
  "ni": "Nicaragua",
  "nl": "Netherlands",
  "no": "Norway",
  "np": "Nepal",
  "nr": "Nauru",
  "nu": "Niue",
  "nz": "New Zealand",
  "om": "Oman",
  "pa": "Panama",
  "pe": "Peru",
  "pf": "French Polynesia",
  "pg": "Papua New Guinea",
  "ph": "Philippines",
  "pk": "Pakistan",
  "pl": "Poland",
  "pm": "St. Pierre & Miquelon",
  "pn": "Pitcairn",
  "pr": "Puerto Rico",
  "pt": "Portugal",
  "pw": "Palau",
  "py": "Paraguay",
  "qa": "Qatar",
  "re": "Reunion",
  "ro": "Romania",
  "ru": "Russian Federation",
  "rw": "Rwanda",
  "sa": "Saudi Arabia",
  "sb": "Solomon Islands",
  "sc": "Seychelles",
  "sd": "Sudan",
  "se": "Sweden",
  "sg": "Singapore",
  "sh": "St. Helena",
  "si": "Slovenia",
  "sj": "Svalbard & Jan Mayen Islands",
  "sk": "Slovak Republic",
  "sl": "Sierra Leone",
  "sm": "San Marino",
  "sn": "Senegal",
  "so": "Somalia",
  "sr": "Suriname",
  "st": "Sao Tome & Principe",
  "sv": "El Salvador",
  "sy": "Syria",
  "sz": "Swaziland",
  "tc": "Turks & Caicos Islands",
  "td": "Chad",
  "tf": "French Southern Territories",
  "tg": "Togo",
  "th": "Thailand",
  "tj": "Tajikistan",
  "tk": "Tokelau",
  "tm": "Turkmenistan",
  "tn": "Tunisia",
  "to": "Tonga",
  "tp": "East Timor",
  "tr": "Turkey",
  "tt": "Trinidad & Tobago",
  "tv": "Tuvalu",
  "tw": "Taiwan",
  "tz": "Tanzania",
  "ua": "Ukraine",
  "ug": "Uganda",
  "us": "United States of America",
  "uy": "Uruguay",
  "uz": "Uzbekistan",
  "va": "Vatican City (Holy See)",
  "vc": "St. Vincent & the Grenadines",
  "ve": "Venezuela",
  "vg": "Virgin Islands (British)",
  "vi": "Virgin Islands (U.S.)",
  "vn": "Viet Nam",
  "vu": "Vanuatu",
  "wf": "Wallis & Futuna Islands",
  "ws": "Samoa",
  "ye": "Yemen",
  "yt": "Mayotte",
  "yu": "Yugoslavia",
  "za": "South Africa",
  "zm": "Zambia",
  "zw": "Zimbabwe",
  "fx": "France (Metropolitan)"
}

// Overrides for the language codes/mappings inferred by country code.
// TODO: This list is far, far from accurate or complete and should be replaced with any internal/authoritative mappings
var iso3601_to_language_mappings = {
  "ca": "en",
  "au": "en",
  "us": "en"
};

data["items"].forEach(function (record) {
  var countryCodes = record.locationSet["include"];
  var countryNames = [];
  countryCodes.forEach(function (code) {
	if (code == "001") { return; }

	if (!iso3601[code.toString().split("-")[0]]) {
		// console.debug("Unmapped ISO3601 code: " + code);
		return;
	} else {
		countryNames.push("en:" + iso3601[code.toString().split("-")[0]]);
	}
  });

  var primaryCountryCode = countryCodes[0].toString().split("-")[0];
  var primaryLanguageCode = primaryCountryCode;
  if (iso3601_to_language_mappings[primaryCountryCode]) {
    primaryLanguageCode = iso3601_to_language_mappings[primaryCountryCode]
  }

  process.stdout.write([primaryLanguageCode, record.displayName].join(":") + "\n");
  process.stdout.write(["wikidata:en", record.tags["brand:wikidata"]].join(":") + "\n");
  process.stdout.write(["country:en:", countryNames.join(",")].join(" ") + "\n");
  process.stdout.write("\n");
});