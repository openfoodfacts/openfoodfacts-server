name: Container Image CI

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Build the frontend image
      run: |
        docker build -t foo . --file docker/frontend/Dockerfile
        # Copy gulp output to the host, so it can be used in the backend container
        CONTAINER=$(docker create foo)
        docker cp $CONTAINER:/opt/product-opener/html/images/icons/dist - > icons.tar
        tar -xf icons.tar -C ./html/images/icons/
        rm icons.tar
        docker rm -v $CONTAINER
    - name: Build the backend image
      run: docker build . --file docker/backend/Dockerfile
    - name: Publish frontend image to Registry
      uses: elgohr/Publish-Docker-Github-Action@2.8
      with:
        name: ${{ github.repository }}/frontend
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        dockerfile: docker/frontend/Dockerfile
        snapshot: true
    - name: Publish backend image to Registry
      uses: elgohr/Publish-Docker-Github-Action@2.8
      with:
        name: ${{ github.repository }}/backend
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: docker.pkg.github.com
        dockerfile: docker/backend/Dockerfile
        snapshot: true
