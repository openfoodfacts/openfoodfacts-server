name: "Daily tasks (cronjobs)"

on:
  schedule:
  - cron: "0 0 * * *" # once a day at 00:00
  push:
    branches: ["cron-*"]

jobs:
  # TODO: Uncomment when prod environment is ready
  # prod-db-backup:
  #   runs-on: ubuntu-latest
  #   environment: off-org
  #   concurrency: off-org
  #   steps:
  #   - name: Backup production database
  #     uses: appleboy/ssh-action@master
  #     with:
  #       host: ${{ secrets.HOST }}
  #       username: ${{ secrets.USERNAME }}
  #       key: ${{ secrets.SSH_PRIVATE_KEY }}
  #       proxy_host: ${{ secrets.PROXY_HOST }}
  #       proxy_username: ${{ secrets.USERNAME }}
  #       proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
  #       script_stop: false
  #       script: |
  #         cd ${{ matrix.env }}/
  #         sudo sh ./scripts/mongodb_dump.sh /mnt/data/ openfoodfacts localhost off

  dev-db-sync:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    strategy:
      matrix:
        env: [mongo-dev]
    environment: ${{ matrix.env }}
    concurrency: ${{ matrix.env }}
    steps:
    - name: Sync prod db data to dev MongoDB
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ secrets.PROXY_HOST }}
        proxy_username: ${{ secrets.USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        command_timeout: 180m
        script_stop: false
        script: |
          cd ${{ matrix.env }}
          # We can put a file to avoid running db update
          if [[ ! -e ./NO_DAILY ]]
          then
            make import_prod_data
            make restart_db
          else
            # make task fail intentionally
            false
          fi

  refresh-products-tags:
    runs-on: ubuntu-latest
    timeout-minutes: 180
    strategy:
      matrix:
        env: [mongo-dev]
    environment: ${{ matrix.env }}
    concurrency: ${{ matrix.env }}
    needs: dev-db-sync
    steps:
    - name: Refresh MongoDB products_tags collection
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        proxy_host: ${{ secrets.PROXY_HOST }}
        proxy_username: ${{ secrets.USERNAME }}
        proxy_key: ${{ secrets.SSH_PRIVATE_KEY }}
        command_timeout: 180m
        script_stop: false
        script: |
          cd ${{ matrix.env }}
          make refresh_product_tags
          make restart_db