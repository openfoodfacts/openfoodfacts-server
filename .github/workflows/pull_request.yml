name: Pull Request

on:
  pull_request:
    branches:
      - master

jobs:
  gulp:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install
    - run: npm run build

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install
    - run: npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 50
    - uses: actions/setup-node@v1
      with:
        node-version: '12.x'
    - run: npm install
    - name: prepare, build, and test
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends cpanminus tesseract-ocr
        # apt packages from cpanfile
        sudo apt-get install -y --no-install-recommends graphviz \
        libwww-perl \
        libimage-magick-perl \
        libxml-encoding-perl \
        libtext-unaccent-perl \
        libmime-lite-perl \
        libcache-memcached-fast-perl \
        libjson-pp-perl \
        libclone-perl \
        libcrypt-passwdmd5-perl \
        libencode-detect-perl \
        libgraphics-color-perl \
        libbarcode-zbar-perl \
        libxml-feedpp-perl \
        liburi-find-perl \
        libxml-simple-perl \
        libexperimental-perl \
        libapache2-request-perl \
        libdigest-md5-perl \
        libtime-local-perl \
        libpq-dev \
        libdbd-pg-perl \
        # setup local::lib
        cpanm --local-lib=~/perl5 local::lib && eval $(perl -I ~/perl5/lib/perl5/ -Mlocal::lib)
        # install perl dependencies
        cpanm --quiet --installdeps --notest --skip-satisfied .
        # Prepare config
        export BUILD_DIR=`pwd`
        ln -s $BUILD_DIR/lib/ProductOpener/Config_off.pm $BUILD_DIR/lib/ProductOpener/Config.pm
        cp $BUILD_DIR/lib/ProductOpener/Config2_sample.pm $BUILD_DIR/lib/ProductOpener/Config2.pm
        ln -s $BUILD_DIR/lib/ProductOpener/SiteLang_off.pm $BUILD_DIR/lib/ProductOpener/SiteLang.pm
        sed -i -e 's|\$server_domain = "openfoodfacts.org";|\$server_domain = "off.travis-ci.org";|g' $BUILD_DIR/lib/ProductOpener/Config2.pm
        sed -i -e 's|\/home\/off|'$BUILD_DIR'|g' $BUILD_DIR/lib/ProductOpener/Config2.pm
        # Ensure everything compiles
        perl -c -CS -Ilib lib/startup_apache2.pl
        node check_perl.js cgi/*.pl
        node check_perl.js scripts/*.pl
        # Rebuild taxonomies
        perl -CS -I$BUILD_DIR/lib $BUILD_DIR/scripts/build_lang.pl
        node refresh_taxonomies.js
        # Run unit tests
        prove -l
