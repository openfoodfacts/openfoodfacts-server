##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

# we need to have main domain for CORS (see nginx-cors includes)
map $host $main_domain {
    default ...;
    ~*.*\.(?<host_main_domain>[^.]+\.[^.]+) $host_main_domain;
}


server {
	listen 80;
	listen [::]:80;

	# Product Opener needs a root domain + a wildcard for all subdomains
	server_name 	server_name ${PRODUCT_OPENER_DOMAIN} *.${PRODUCT_OPENER_DOMAIN};

	# static file we serve are in html/
	root /opt/product-opener/html/;

	gzip on;
	gzip_min_length 1000;
	client_max_body_size 20M; # for image uploads

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	location /data/ {
		include conf.d/off.cors-headers.include;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	# handling expirations
	include conf.d/expires-no-json-xml.include;

	location ~ ^/images/products/ {
		include conf.d/off.cors-headers.include;
		add_header Link "<https://creativecommons.org/licenses/by-sa/3.0/>; rel='license'; title='CC-BY-SA 3.0'";
		# optimize gzip compressed content (like OCR .json stored next to .jpg files)
		gzip_static always;
		gunzip on;
	}

	# Static files are served directly by NGINX

	location ~ ^/(.well-known|images|fonts|css|js|rss|files|resources|foundation|bower_components)/ {
		include conf.d/off.cors-headers.include;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
		gzip_static always;
		gunzip on;
	}

	location ~ /(favicon\.ico|robots\.txt)$ {
		include conf.d/off.cors-headers.include;
		try_files $uri $uri/ =404;
	}

	# redirects of some locations
    include conf.d/off.locations-redirects.include;

	# Dynamically generated files and CGI scripts are passed
	# to the Apache + mod_perl server running on the backend container

	# this is the internal Docker DNS, cache only for 30s
	resolver 127.0.0.11 valid=30s;
	location ~ /donate\/.*$ {
		include conf.d/off.cors-headers.include;
		try_files $uri  =404;
	}
	location / {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		set $backend backend;
		proxy_pass http://$backend/cgi/display.pl?$request_uri;
	}

	location /nginx_status {
		stub_status;
		allow 127.0.0.1; 	   # localhost
		allow 172.30.0.0/16;   # docker IP range
		deny all;              # deny all other hosts 
	}

	location /cgi/ {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		set $backend backend;
		proxy_pass http://$backend;
	}
}
