##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration
#
# Generally, you will want to move this file somewhere, and start with a clean
# file but keep this around for reference. Or just disable in sites-enabled.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
server {
	# listen 80 default_server;
	# listen [::]:80 default_server;

		listen 80;
		listen [::]:80;


	server_name openbeautyfacts.org *.openbeautyfacts.org ;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;

	listen 443 http2 ssl;
	listen [::]:443 http2 ssl;

	include snippets/ssl.openbeautyfacts.org;
		include snippets/ssl-params.conf;

	root /srv/obf/html;

	access_log /srv/obf/logs/nginx.access2.log;
	error_log /srv/obf/logs/nginx.error2.log;

		# Redirect GET requests to https. POST requests will be transformed
		# to GET by most browsers when redirected, and it breaks apps that
		# use the API through http.

		if ($scheme = http) {
			set $test "A";
		}
		if ($request_uri !~ "/api/") {
			set $test "${test}B";
		}
		if ($request_method = GET) {
			set $test "${test}C";
		}
		if ($test = ABC) {
			return 301 https://$host$request_uri;
		}

	gzip on;
	gzip_min_length 1000;

	location /data/ {
		include snippets/off.cors-headers.include;
		include snippets/ssl-headers.conf;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
}

	# Add index.php to the list if you are using PHP
	index index.html index.htm index.nginx-debian.html;

	location ~* \.(eot|ttf|woff|woff2)$ {
		include snippets/off.cors-headers.include;
	}

	location ~ ^/images/products/ {
		include snippets/off.cors-headers.include;
		add_header Link "<http://creativecommons.org/licenses/by-sa/3.0/>; rel='license'; title='CC-BY-SA 3.0'";
		# optimize gzip compressed content (like OCR .json stored next to .jpg files)
		gzip_static always;
		gunzip on;
	}


	location ~ ^/(favicon.ico) {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

	location ~ ^/(.well-known|images|fonts|css|js|rss|files|resources|foundation|bower_components)/ {
		include snippets/off.cors-headers.include;
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}

        # GoogleAssociationService made 2500 requests/min to assetlinks.json
        # and much less when caching headers are sent
        location = /.well-known/assetlinks.json {
                include snippets/off.cors-headers.include;
                expires 1d;
                try_files $uri $uri/ =404;
        }

	location / {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass http://127.0.0.1:8002/cgi/display.pl?;
	}

	location /cgi/ {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_pass http://127.0.0.1:8002;
	}

	# deny access to .htaccess files, if Apache's document root
	# concurs with nginx's one
	#
	#location ~ /\.ht {
	#       deny all;
	#}

	include /etc/nginx/expires-no-json-xml.conf;
}
