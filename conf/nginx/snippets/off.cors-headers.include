# defines cors headers for NGINX static resources
# Perl should take care of those headers by itself
# as the CORS spec does not tolerate headers repetition

# default headers
add_header Access-Control-Allow-Origin *;
add_header Access-Control-Allow-Methods 'HEAD, GET, PATCH, POST, PUT, OPTIONS';
#
# Custom headers and headers various browsers *should* be OK with but aren't
#
add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,If-None-Match';
add_header Access-Control-Expose-Headers 'Content-Length,Content-Range';


if ($request_method = 'OPTIONS') {
    # we have to repeat those, has add_header is not inherited if used in a block
    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods 'HEAD, GET, PATCH, POST, PUT, OPTIONS';
    add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,If-None-Match';
    #
    # Tell client that this pre-flight info is valid for 20 days
    #
    add_header Access-Control-Max-Age 1728000;
    add_header Content-Type 'text/plain; charset=utf-8';
    add_header Content-Length 0;
    return 204;
}
